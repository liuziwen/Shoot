有如下程序： 
#inClude<iostream> using namespaCe std； 
Class Base{
publiC： 
Base(int x=0){Cout<<x；} }； 
Class Derived：publiC Base{
publiC： 
Derived(int X=0){Cout<<x；} 
private： 
Base val； }； 
int main() {
Derived d(1)； return 0； 
}
执行这个程序的输出结果是( )。

A．0

B．1

C．01

D．001

4

解析：本题考查派生类的构造函数和析构函数，在定义一个派生类的对象时，先调用基类的构造函数，然后再执行派生类的构造函数，对象释放时，先执行派生类的析构函数，再执行基类的析构函数。所以本题中定义了一个对象d，先执行基类的构造函数输出0，因为派生类中的私有数据成员为Base，所以还会执行一次基类的构造函数输出0，最后执行派生类的构造函数输出1，所以本题答案为D。

下列排序方法中，最坏情况下比较次数最少的是（　　）。

A．冒泡排序

B．简单选择排序

C．直接插入排序

D．堆排序

4

解析：冒泡排序、直接插入排序与简单选择排序法在最坏情况下均需要比较n(n-1)/2次，而堆排序在最坏情况下需要比较的次数是nlog2 n。

与语句cout<<endl；不等价的是( )。

A．cout <<’\n’；

B．cout<<‘\l2’：

C．cout <<’\xA’；

D．cout<<‘\0’：

4

解析：题干表示的是回车换行，选项A、B、c都表示回车换行，而选项D是字符串的结尾标志。
