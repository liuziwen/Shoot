下列程序的输出结果是( )。
#include<iostream．h>
int main(int a，int B)
{
if(a<B．return a； 
else return b； 
return 0； 
}
void main()
{
cout<<min(1，min(2，3))<<endl； 
}

A．0

B．1

C．2

D．3

2

解析：本题考查的是函数的调用，第一次调用min(2，3)，因为2<3，所以返回值为2，第二次调用min(1，2)，因为l<2，所以返回1

有以下程序： 
#include<iostream．h>
void fun(int a，int b，int C．
{ a=456，b=567，c=678；}
void main()
{
int X=10，Y=20，Z=30； 
fun(X，Y，z)； 
cout<<x<<’，’<<Y<<’，’<<z<<endl； 
}
输出结果是( )。

A．30，20，10

B．10，20，30

C．456，567，678

D．678，567，456

2

解析：本题考查函数中变量的作用范围，在主函数中给变量x、Y、Z赋值，然后将其作为实参传递给了函数fun()，虽然在函数fun()中改变了这3个变量的值，但只是同名的局部变量，不影响函数中变量的值，所以在调用函数fun()结束后，主函数3个变量的值未改变。

耦合性和内聚性是对模块独立性度量的两个标准。下列叙述中正确的是（　　）。

A．提高耦合性降低内聚性有利于提高模块的独立性

B．降低耦合性提高内聚性有利于提高模块的独立性

C．耦合性是指一个模块内部各个元素间彼此结合的紧密程度

D．内聚性是指模块间互相连接的紧密程度

2

解析：模块独立性是指每个模块只完成系统要求的独立的子功能，并且与其他模块的联系最少且接口简单。一般较优秀的软件设计，应尽量做到高内聚、低耦合，即减弱模块之间的耦合性和提高模块内的内聚性，有利于提高模块的独立性，所以A错误，B正确。耦合性是模块间互相连接的紧密程度的度量而内聚性是指一个模块内部各个元素间彼此结合的紧密程度，所以C与D错误
